{"version":3,"sources":["ts/storageHelper.ts","ts/arc.ts","ts/midiHelper.ts","ts/select.ts","index.ts"],"names":[],"mappings":";AAAa,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAb,IAAA,EAAA,WAAA,SAAA,KAuBA,OAtBS,EAAA,SAAP,SAAgB,EAAW,QAAA,IAAA,IAAA,EAAA,IACnB,IAAA,EAAQ,aAAa,QAAQ,EAAK,IAKjC,OAJH,GAAS,IACX,EAAK,GAAY,GAGZ,GAGF,EAAA,SAAP,SAAgB,EAAW,QAAA,IAAA,IAAA,EAAA,IACzB,QAAQ,IAAI,gBAAiB,EAAK,GAAI,EAAK,GAAU,YACrD,aAAa,QAAQ,EAAK,GAAI,EAAK,GAAU,aAGxC,EAAA,OAAP,SAAc,EAAW,QAAA,IAAA,IAAA,EAAA,IACjB,IAAA,EAAyB,aAAZ,EACf,QACA,SACJ,EAAK,iBAAiB,EAAW,WAC/B,EAAc,SAAS,MAG7B,EAvBA,GAAa,QAAA,cAAA;;ACGA,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAFb,IAAA,EAAA,QAAA,mBAEA,EAAA,WASE,SAAA,EAAY,EAAkB,GAPtB,KAAA,IAAM,EAAA,cAGN,KAAA,SAAoC,KACpC,KAAA,OAA6B,KAC7B,KAAA,OAAS,EAGV,KAAA,UAAY,EACZ,KAAA,IAAM,EAEP,KAAK,YACF,KAAA,SAAW,SAAS,cAAc,KAAK,WACvC,KAAA,OAAS,SAAS,cAAiB,KAAK,UAAS,UACjD,KAAA,IAAI,SAAS,KAAK,SAAU,UAG9B,KAAA,UA6BT,OA1BE,OAAA,eAAI,EAAA,UAAA,QAAK,CAAT,IAAA,WACS,OAAA,IAAI,OAAO,KAAK,SADhB,YAAA,EAtBE,cAAA,IA0BH,EAAA,UAAA,QAAR,WACM,KAAK,WACF,KAAA,SAAS,iBAAiB,QAAS,KAAK,gBAAgB,KAAK,OAC7D,KAAA,SAAS,iBAAiB,QAAS,KAAK,gBAAgB,KAAK,SAI9D,EAAA,UAAA,gBAAR,WACQ,IAAA,EAAO,SAAS,cAAiB,KAAK,UAAS,SAC/C,EAAO,IAAI,OAAO,EAAK,OAAS,GAElC,KAAK,WACF,KAAA,OAAS,IAAI,OAAO,KAAK,SAAS,OACnC,KAAK,QAAU,IACZ,KAAA,OAAO,UAAe,KAAK,OAAM,MAAM,GAIzC,KAAA,IAAI,YAAY,KAAK,IAAI,GAAI,EAAM,KAAK,OACxC,KAAA,IAAI,SAAS,KAAK,SAAU,WAGvC,EAhDA,GAAa,QAAA,IAAA;;ACHA,aAAA,IAAA,EAAA,MAAA,KAAA,WAAA,SAAA,EAAA,EAAA,EAAA,GAAA,OAAA,IAAA,IAAA,EAAA,UAAA,SAAA,EAAA,GAAA,SAAA,EAAA,GAAA,IAAA,EAAA,EAAA,KAAA,IAAA,MAAA,GAAA,EAAA,IAAA,SAAA,EAAA,GAAA,IAAA,EAAA,EAAA,MAAA,IAAA,MAAA,GAAA,EAAA,IAAA,SAAA,EAAA,GAAA,EAAA,KAAA,EAAA,EAAA,OAAA,IAAA,EAAA,SAAA,GAAA,EAAA,EAAA,SAAA,KAAA,EAAA,GAAA,GAAA,EAAA,EAAA,MAAA,EAAA,GAAA,KAAA,WAAA,EAAA,MAAA,KAAA,aAAA,SAAA,EAAA,GAAA,IAAA,EAAA,EAAA,EAAA,EAAA,EAAA,CAAA,MAAA,EAAA,KAAA,WAAA,GAAA,EAAA,EAAA,GAAA,MAAA,EAAA,GAAA,OAAA,EAAA,IAAA,KAAA,GAAA,IAAA,IAAA,OAAA,EAAA,CAAA,KAAA,EAAA,GAAA,MAAA,EAAA,GAAA,OAAA,EAAA,IAAA,mBAAA,SAAA,EAAA,OAAA,UAAA,WAAA,OAAA,OAAA,EAAA,SAAA,EAAA,GAAA,OAAA,SAAA,GAAA,OAAA,SAAA,GAAA,GAAA,EAAA,MAAA,IAAA,UAAA,mCAAA,KAAA,GAAA,IAAA,GAAA,EAAA,EAAA,IAAA,EAAA,EAAA,EAAA,GAAA,EAAA,OAAA,EAAA,GAAA,EAAA,SAAA,EAAA,EAAA,SAAA,EAAA,KAAA,GAAA,GAAA,EAAA,SAAA,EAAA,EAAA,KAAA,EAAA,EAAA,KAAA,KAAA,OAAA,EAAA,OAAA,EAAA,EAAA,IAAA,EAAA,CAAA,EAAA,EAAA,GAAA,EAAA,QAAA,EAAA,IAAA,KAAA,EAAA,KAAA,EAAA,EAAA,EAAA,MAAA,KAAA,EAAA,OAAA,EAAA,QAAA,CAAA,MAAA,EAAA,GAAA,MAAA,GAAA,KAAA,EAAA,EAAA,QAAA,EAAA,EAAA,GAAA,EAAA,CAAA,GAAA,SAAA,KAAA,EAAA,EAAA,EAAA,IAAA,MAAA,EAAA,KAAA,MAAA,SAAA,QAAA,KAAA,GAAA,EAAA,EAAA,MAAA,OAAA,GAAA,EAAA,EAAA,OAAA,MAAA,IAAA,EAAA,IAAA,IAAA,EAAA,IAAA,CAAA,EAAA,EAAA,SAAA,GAAA,IAAA,EAAA,MAAA,GAAA,EAAA,GAAA,EAAA,IAAA,EAAA,GAAA,EAAA,IAAA,CAAA,EAAA,MAAA,EAAA,GAAA,MAAA,GAAA,IAAA,EAAA,IAAA,EAAA,MAAA,EAAA,GAAA,CAAA,EAAA,MAAA,EAAA,GAAA,EAAA,EAAA,MAAA,GAAA,GAAA,EAAA,MAAA,EAAA,GAAA,CAAA,EAAA,MAAA,EAAA,GAAA,EAAA,IAAA,KAAA,GAAA,MAAA,EAAA,IAAA,EAAA,IAAA,MAAA,EAAA,KAAA,MAAA,SAAA,EAAA,EAAA,KAAA,EAAA,GAAA,MAAA,GAAA,EAAA,CAAA,EAAA,GAAA,EAAA,EAAA,QAAA,EAAA,EAAA,EAAA,GAAA,EAAA,EAAA,GAAA,MAAA,EAAA,GAAA,MAAA,CAAA,MAAA,EAAA,GAAA,EAAA,QAAA,EAAA,MAAA,GAAA,CAAA,CAAA,EAAA,OAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAb,IAAA,EAAA,WAUE,SAAA,IATA,KAAA,QAAU,IACV,KAAA,SAAW,IACX,KAAA,GAAK,IAEG,KAAA,QAA+B,GAC/B,KAAA,SAAiC,GACjC,KAAA,UAAsC,KACtC,KAAA,WAAuC,KAGxC,KAAA,UAAY,SAAS,cAAc,eACnC,KAAA,WAAa,SAAS,cAAc,gBA2E7C,OAxEU,EAAA,UAAA,WAAR,SAAmB,GAAnB,IAAA,EAAA,KACE,EAAW,iBAAiB,cAAe,WACzC,EAAK,aAAa,KAEf,KAAA,aAAa,IAGZ,EAAA,UAAA,aAAR,SAAqB,GACd,KAAA,QAAU,GACV,KAAA,SAAW,GAIX,IADC,IAAA,EAAS,EAAW,OAAO,SACxB,EAAQ,EAAO,OAAQ,IAAU,EAAM,KAAM,EAAQ,EAAO,OAC9D,KAAA,QAAQ,KAAK,EAAM,OAKrB,IADC,IAAA,EAAU,EAAW,QAAQ,SAC1B,EAAS,EAAQ,OAAQ,IAAW,EAAO,KAAM,EAAS,EAAQ,OACpE,KAAA,SAAS,KAAK,EAAO,OAGvB,KAAA,mBAGC,EAAA,UAAA,gBAAR,WACM,KAAK,YACF,KAAA,UAAU,UAAY,KAAK,QAAQ,IAAI,SAAC,GACpC,MAAA,WAAW,EAAO,KAAI,cAC5B,KAAK,KAGN,KAAK,aACF,KAAA,WAAW,UAAY,KAAK,SAAS,IAAI,SAAC,GACtC,MAAA,WAAW,EAAO,KAAI,cAC5B,KAAK,MAIN,EAAA,UAAA,QAAN,WAvDW,OAAA,EAAA,UAAA,OAAA,EAAA,WAAA,IAAA,EAAA,KAAA,OAAA,EAAA,KAAA,SAAA,GAAA,OAAA,EAAA,OAAA,KAAA,EAwDT,MAAA,CAAA,EAAO,UACN,oBACA,KACG,SAAC,GAAmC,OAAA,EAAK,WAAW,IACpD,SAAC,GAAe,OAAA,QAAQ,IAAI,uBAAwB,MA5D/C,KAAA,EAAA,OAwDT,EAAA,OAxDS,CAAA,SA+DX,EAAA,UAAA,OAAA,SAAO,EAAe,GACd,IAAA,EAAQ,CAAC,KAAK,QAAS,EAAO,GAEhC,KAAK,YAC4B,KAAK,SAAS,KAAK,WAAW,eAC1D,KAAK,IAIhB,EAAA,UAAA,QAAA,SAAQ,EAAe,GACf,IAAA,EAAS,CAAC,KAAK,QAAS,EAAO,GAEjC,KAAK,YAC4B,KAAK,SAAS,KAAK,WAAW,eAC1D,KAAK,EAAQ,KAAK,MAAQ,IAIrC,EAAA,UAAA,YAAA,SAAY,EAAa,EAAgB,GACnC,KAAK,YAC4B,KAAK,SAAS,KAAK,WAAW,eAC1D,KAAK,CAAC,EAAK,EAAQ,KAGhC,EAvFA,GAAa,QAAA,WAAA;;ACEA,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAFb,IAAA,EAAA,QAAA,mBAEA,EAAA,WAME,SAAA,EAAY,GAGN,GARE,KAAA,IAAM,EAAA,cAGN,KAAA,SAAoC,KAGrC,KAAA,UAAY,EAEb,KAAK,UAAW,CACb,KAAA,SAAW,SAAS,cAAc,KAAK,WACtC,IAAA,EAAQ,KAAK,IAAI,SAAS,KAAK,SAAU,iBAC3C,KAAK,UAAY,IACd,KAAA,SAAS,MAAQ,EAAM,YAI3B,KAAA,UAcT,OAXU,EAAA,UAAA,QAAR,WACM,KAAK,UACF,KAAA,SAAS,iBAAiB,SAAU,KAAK,gBAAgB,KAAK,QAI/D,EAAA,UAAA,gBAAR,WACM,KAAK,UACF,KAAA,IAAI,SAAS,KAAK,SAAU,kBAGvC,EA/BA,GAAa,QAAA,OAAA;;ACiDb,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAnDA,IAAA,EAAA,QAAA,YACA,EAAA,QAAA,mBACA,EAAA,QAAA,eAEA,EAAA,WAIE,SAAA,IAHQ,KAAA,YAAuC,KACvC,KAAA,aAAwC,KAGzC,KAAA,YAAc,SAAS,cAAc,gBACrC,KAAA,aAAe,SAAS,cAAc,iBAGrC,IAAA,EAAK,IAAI,EAAA,WACf,EAAG,UAGH,SAAS,iBAAiB,sBAAsB,QAAQ,SAAC,GACnD,IAAA,EAAA,OAAO,IAAI,EAAO,MAIxB,SAAS,iBAAiB,aAAa,QAAQ,SAAC,GAC1C,IAAA,EAAA,IAAI,IAAI,EAAI,GAAM,KAGnB,KAAA,UAuBT,OApBE,EAAA,UAAA,UAAA,WACE,QAAQ,IAAI,iCAON,EAAA,UAAA,QAAR,WACM,KAAK,cACF,KAAA,aAAa,iBAAiB,QAAS,WAC1C,QAAQ,IAAI,sCACZ,aAAa,UAIb,KAAK,aACF,KAAA,YAAY,iBAAiB,QAAS,KAAK,UAAU,KAAK,QAGrE,EA7CA,GAAa,QAAA,kBAAA,EA+Cb,IAAI","file":"src.43efd4d7.js","sourceRoot":"../src","sourcesContent":["export class StorageHelper {\n  static getState(item: any, valueSrc: string = '') {\n    const state = localStorage.getItem(item.id);\n    if (state && valueSrc) {\n      item[valueSrc] = state;\n    }\n\n    return state;\n  }\n\n  static setState(item: any, valueSrc: string = '') {\n    console.log('setting state', item.id, item[valueSrc].toString());\n    localStorage.setItem(item.id, item[valueSrc].toString());\n  }\n\n  static attach(item: any, valueSrc: string = '') {\n    const eventType = (valueSrc == 'innerText')\n      ? 'input'\n      : 'change';\n    item.addEventListener(eventType, () => {\n      StorageHelper.setState(item);\n    });\n  }\n}","import {MidiHelper} from './midiHelper';\nimport {StorageHelper} from './storageHelper';\n\nexport class Arc {\n  private mh_: MidiHelper;\n  private sh_ = StorageHelper;\n\n  private selector_: string;\n  private element_: HTMLInputElement | null = null;\n  private label_: HTMLElement | null = null;\n  private value_ = 0;\n\n  constructor(selector: string, mh: MidiHelper) {\n    this.selector_ = selector;\n    this.mh_ = mh;\n\n    if (this.selector_) {\n      this.element_ = document.querySelector(this.selector_);\n      this.label_ = document.querySelector(`${this.selector_}-label`);\n      this.sh_.getState(this.element_, 'value');\n    }\n\n    this.attach_();\n  }\n\n  get value(): number {\n    return new Number(this.value_) as number;\n  }\n\n  private attach_() {\n    if (this.element_) {\n      this.element_.addEventListener('input', this.changeListener_.bind(this));\n      this.element_.addEventListener('click', this.changeListener_.bind(this));\n    }\n  }\n\n  private changeListener_() {\n    const elem = document.querySelector(`${this.selector_}-val1`) as HTMLInputElement;\n    const val1 = new Number(elem.value || 0) as number;\n\n    if (this.element_) {\n      this.value_ = new Number(this.element_.value) as number;\n      if (this.label_ && val1) {\n        this.label_.innerText = `${this.value_} | ${val1}`;\n      }\n\n      // this.mh_.noteOn(this.value, 100, 100);\n      this.mh_.sendMessage(this.mh_.CC, val1, this.value);\n      this.sh_.setState(this.element_, 'value');\n    }\n  }\n}","export class MidiHelper {\n  NOTE_ON = 0x90;\n  NOTE_OFF = 0x80;\n  CC = 0xB0;\n\n  private midiIn_: WebMidi.MIDIInput[] = [];\n  private midiOut_: WebMidi.MIDIOutput[] = [];\n  private selectIn_: HTMLSelectElement | null = null;\n  private selectOut_: HTMLSelectElement | null = null;\n\n  constructor() {\n    this.selectIn_ = document.querySelector('#midi-input');\n    this.selectOut_ = document.querySelector('#midi-output');\n  }\n\n  private midiReady_(midiAccess: WebMidi.MIDIAccess) {\n    midiAccess.addEventListener('statechange', () => {\n      this.initDevices_(midiAccess);\n    });\n    this.initDevices_(midiAccess);\n  }\n\n  private initDevices_(midiAccess: WebMidi.MIDIAccess) {\n    this.midiIn_ = [];\n    this.midiOut_ = [];\n\n    // MIDI devices that send you data.\n    const inputs = midiAccess.inputs.values();\n    for (let input = inputs.next(); input && !input.done; input = inputs.next()) {\n      this.midiIn_.push(input.value);\n    }\n\n    // MIDI devices that you send data to.\n    const outputs = midiAccess.outputs.values();\n    for (let output = outputs.next(); output && !output.done; output = outputs.next()) {\n      this.midiOut_.push(output.value);\n    }\n\n    this.displayDevices_();\n  }\n\n  private displayDevices_() {\n    if (this.selectIn_) {\n      this.selectIn_.innerHTML = this.midiIn_.map((device: any) => {\n        return `<option>${device.name}</option>`\n      }).join('');\n    }\n\n    if (this.selectOut_) {\n      this.selectOut_.innerHTML = this.midiOut_.map((device: any) => {\n        return `<option>${device.name}</option>`\n      }).join('');\n    }\n  }\n\n  async connect() {\n    await (navigator as Navigator)\n    .requestMIDIAccess()\n    .then(\n        (midiAccess: WebMidi.MIDIAccess) => this.midiReady_(midiAccess),\n        (err: Error) => console.log('Something went wrong', err));\n  }\n\n  noteOn(pitch: number, velocity: number) {\n    const msgOn = [this.NOTE_ON, pitch, velocity];\n\n    if (this.selectOut_) {\n      const device: WebMidi.MIDIOutput = this.midiOut_[this.selectOut_.selectedIndex];\n      device.send(msgOn);\n    }\n  }\n\n  noteOff(pitch: number, duration: number) {\n    const msgOff = [this.NOTE_ON, pitch, 0];\n\n    if (this.selectOut_) {\n      const device: WebMidi.MIDIOutput = this.midiOut_[this.selectOut_.selectedIndex];\n      device.send(msgOff, Date.now() + duration);\n    }\n  }\n\n  sendMessage(msg: number, value1: number, value2: number) {\n    if (this.selectOut_) {\n      const device: WebMidi.MIDIOutput = this.midiOut_[this.selectOut_.selectedIndex];\n      device.send([msg, value1, value2]);\n    }\n  }\n}","import {StorageHelper} from './storageHelper';\n\nexport class Select {\n  private sh_ = StorageHelper;\n\n  private selector_: string;\n  private element_: HTMLInputElement | null = null;\n\n  constructor(selector: string) {\n    this.selector_ = selector;\n\n    if (this.selector_) {\n      this.element_ = document.querySelector(this.selector_);\n      const state = this.sh_.getState(this.element_, 'selectedIndex');\n      if (this.element_ && state) {\n        this.element_.value = state.toString();\n      }\n    }\n\n    this.attach_();\n  }\n\n  private attach_() {\n    if (this.element_) {\n      this.element_.addEventListener('change', this.changeListener_.bind(this));\n    }\n  }\n\n  private changeListener_() {\n    if (this.element_) {\n      this.sh_.setState(this.element_, 'selectedIndex');\n    }\n  }\n}","import {Arc} from './ts/arc';\nimport {MidiHelper} from './ts/midiHelper';\nimport {Select} from './ts/select';\n\nexport class WebmidiController {\n  private saveButton_: HTMLInputElement | null = null;\n  private clearButton_: HTMLInputElement | null = null;\n\n  constructor() {\n    this.saveButton_ = document.querySelector('#save-button');\n    this.clearButton_ = document.querySelector('#clear-button');\n\n    // Instantiate webmidi.\n    const mh = new MidiHelper();\n    mh.connect();\n\n    // Instantiate selects.\n    document.querySelectorAll('select.midi-select').forEach((select) => {\n      new Select(`#${select.id}`);\n    });\n\n    // Instantiate sliders.\n    document.querySelectorAll('input.arc').forEach((arc) => {\n      new Arc(`#${arc.id}`, mh);\n    });\n\n    this.attach_();\n  }\n\n  saveState() {\n    console.log('Saving state in localStorage');\n    // const saves = document.querySelectorAll('*[data-save]');\n    // saves.forEach((item: any) => {\n    //   this.localStorageSaveHandler_(item);\n    // });\n  }\n\n  private attach_() {\n    if (this.clearButton_) {\n      this.clearButton_.addEventListener('click', () => {\n        console.log('Clearing saved localStorage states');\n        localStorage.clear();\n      });\n    }\n\n    if (this.saveButton_) {\n      this.saveButton_.addEventListener('click', this.saveState.bind(this));\n    }\n  }\n}\n\nnew WebmidiController();"]}